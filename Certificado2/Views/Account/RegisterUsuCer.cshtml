
@{
    ViewData["Title"] = "Resgitrar Usuario";
    Layout = "_Layout";
}

@model Certificado2.Modelos.RegisterViewModel




<div class="container mt-5">
    <h2>@ViewData["Title"]</h2>
    <h6>@ViewBag.Mensaje</h6>
    <form asp-action="Register" method="post">
        <div class="mb-3">
            <label asp-for="NombreCompleto" class="form-label">Nombre Completo</label>
            <input asp-for="NombreCompleto" class="form-control" name="NombreCompleto" id="NombreCompleto" />
            <div asp-validation-for="NombreCompleto" class="invalid-feedback"></div>
        </div>
        <div class="mb-3">
            <label asp-for="PhoneNumber" class="form-label">Telefono</label>
            <input asp-for="PhoneNumber" class="form-control" name="PhoneNumber" id="PhoneNumber" min="10" max="10" />
            <div asp-validation-for="Telefono" class="invalid-feedback"></div>
        </div>

        <div class="mb-3">
            <label asp-for="UserName" class="form-label">Usuario</label>
            <input asp-for="UserName" class="form-control" name="UserName" id="UserName" />
            <div asp-validation-for="UserName" class="invalid-feedback"></div>
        </div>
        <div class="mb-3">
            <label asp-for="Email" class="form-label">Email</label>
            <input asp-for="Email" class="form-control" name="Email" id="Email" type="email" />
            <div asp-validation-for="Email" class="invalid-feedback"></div>
        </div>
        <div class="mb-3">
            <label asp-for="Password" class="form-label">Contraseña</label>
            <input asp-for="Password" class="form-control" type="password" name="password" id="password" />
            <div asp-validation-for="Password" class="invalid-feedback"></div>
        </div>
        <div class="mb-3">
            <label asp-for="ConfirmPassword" class="form-label">Contraseña</label>
            <input asp-for="ConfirmPassword" class="form-control" type="password" name="ConfirmPassword" id="ConfirmPassword" />
            <div asp-validation-for="ConfirmPassword" class="invalid-feedback"></div>
        </div>


        <input asp-for="idcertificador" class="form-control" value="@ViewBag.idcertificador" type="hidden" />
           
        
        <button type="submit" class="btn btn-primary">Registrar</button>
    </form>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const passwordInput = document.getElementById("password");
        const confirmPasswordInput = document.getElementById("ConfirmPassword");

        function validatePassword() {
            const password = passwordInput.value;
            const confirmPassword = confirmPasswordInput.value;

            let errorMessage = "";

            // Validar longitud mínima de 8 caracteres
            if (password.length < 8) {
                errorMessage = "La contraseña debe tener al menos 8 caracteres.";
            }

            // Validar que contenga al menos un número
            const hasNumber = /\d/;
            if (!hasNumber.test(password)) {
                errorMessage = "La contraseña debe contener al menos un número.";
            }

            // Validar que las contraseñas coincidan
            if (password !== confirmPassword) {
                errorMessage = "Las contraseñas no coinciden.";
            }

            if (errorMessage) {
                passwordInput.setCustomValidity(errorMessage);
                confirmPasswordInput.setCustomValidity(errorMessage);
            } else {
                passwordInput.setCustomValidity("");
                confirmPasswordInput.setCustomValidity("");
            }
        }

        // Agregar eventos para validar mientras se escribe
        passwordInput.addEventListener("input", validatePassword);
        confirmPasswordInput.addEventListener("input", validatePassword);
    });
</script>




<script>await Html.RenderPartialAsync("_ValidationScriptsPartial");</script>
